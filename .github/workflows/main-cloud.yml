# This is a basic workflow to help you get started with Actions.

name: CI with Xray (cloud and server/DC)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Run install
        run: |
          npm install cypress
          npm install mocha-junit-reporter
          
      - name: Run tests
          env:
            BASE_URL: ${{ secrets.BASE_URL }}
            AUTH_USERNAME: ${{ secrets.AUTH_USERNAME }}
            AUTH_PASSWORD: ${{ secrets.AUTH_PASSWORD }}
        run: npm test
      - name: debug JUnit XML report
        run: cat results/todo-results.xml
      - name: "Import results to Xray (server/DC) using a GH action"
        if: ${{ false }}
        uses: mikepenz/xray-action@v2.3.0
        with:
           username: "${{ secrets.JIRASERVER_USERNAME }}"
           password: "${{ secrets.JIRASERVER_PASSWORD }}"
           xrayCloud: "false"
           xrayBaseUrl: "${{ secrets.JIRASERVER_BASE_URL }}"
           testFormat: "junit"
           testPaths: "**/results/*.xml"
           testPlanKey: "${{ secrets.XRAYSERVER_TEST_PLAN_KEY }}"
           projectKey: "${{ secrets.JIRASERVER_PROJECT_KEY }}"
      - name: "Import results to Xray (cloud) using a GH action"
        uses: mikepenz/xray-action@v2.3.0
        with:
           username: "${{ secrets.XRAYCLOUD_CLIENT_ID }}"
           password: "${{ secrets.XRAYCLOUD_CLIENT_SECRET }}"
           xrayCloud: "true"
           testFormat: "junit"
           testPaths: "**/results/*.xml"
           testPlanKey: "${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}"
           projectKey: "${{ secrets.JIRACLOUD_PROJECT_KEY }}"
